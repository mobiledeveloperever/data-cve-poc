import subprocess
import colorlog


# Set up the logger
logger = colorlog.getLogger()
#logger.setLevel(colorlog.colorlog.logging.DEBUG)

# Create a handler with a custom format and set the color
handler = colorlog.StreamHandler()
handler.setFormatter(
    colorlog.ColoredFormatter(
        "%(log_color)s%(levelname)s:%(message)s",
        log_colors={
            'DEBUG': 'green',
            'INFO': 'purple',
            'WARNING': 'red',
            'ERROR': 'red',
            #'CRITICAL': 'bold_red',
        },
    )
)
logger.addHandler(handler)


mua = "Microcode Update Available"
mp = "This may have been mitigated already, please confirm"

# Run the command and capture its output
result = subprocess.run('wmic cpu get processorid', stdout=subprocess.PIPE, text=True, shell=True)
result2 = subprocess.run('wmic bios get smbiosbiosversion', stdout=subprocess.PIPE, text=True, shell=True)


# Print the entire output of the command
#print(str(result.stdout))

# Extract a substring from the output (characters 31 to 37)
substring = result.stdout[31:37].strip() #Strip the ProcessorID to only include the ID string needed
substring2 = result2.stdout[18:27].strip()#Strip BIOS version string to only include the version

print('CPU ID: ' + str(substring))
print('BIOS version: ' + str(substring2))



if substring in ["706E5", "606A6", "606C1", "A0671", "806C1", "806C2", "806D1", "A0671"]:
    logger.warning(mua)
elif substring in ["906A4", "806F8", "B0671"]:
    logger.info(mp)
else:
    logger.error('Not Found!')



